-- Publisher table
CREATE TABLE Publisher
(
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    address     VARCHAR(255) NOT NULL,
    phoneNumber VARCHAR(50)  NOT NULL
);

-- Member table
CREATE TABLE Member
(
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    email       VARCHAR(255) NOT NULL UNIQUE,
    phoneNumber VARCHAR(50)  NOT NULL,
    address     VARCHAR(255) NOT NULL
);

-- Book table with foreign key reference to Publisher
CREATE TABLE Book
(
    id              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title           VARCHAR(255) NOT NULL,
    author          VARCHAR(255) NOT NULL,
    publisherId     INT          NOT NULL,
    publicationYear INT          NOT NULL,
    isbn            VARCHAR(50)  NOT NULL UNIQUE,
    CONSTRAINT fk_books_publisher FOREIGN KEY (publisherId) REFERENCES Publisher (id)
);

-- Copy table with foreign key reference to Book
CREATE TABLE Copy
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bookId     INT         NOT NULL,
    copyNumber INT         NOT NULL,
    status     VARCHAR(50) NOT NULL,
    CONSTRAINT fk_copies_book FOREIGN KEY (bookId) REFERENCES Book (id)
);

-- Librarian table with foreign key reference to Member
CREATE TABLE Librarian
(
    id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    memberId       INT          NOT NULL,
    employmentDate DATE         NOT NULL,
    position       VARCHAR(255) NOT NULL,
    CONSTRAINT fk_librarians_user FOREIGN KEY (memberId) REFERENCES Member (id)
);

-- Borrowing table with foreign key references to Member and Copy
CREATE TABLE Borrowing
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    memberId   INT  NOT NULL,
    copyId     INT  NOT NULL,
    borrowDate DATE NOT NULL,
    returnDate DATE,
    CONSTRAINT fk_borrowings_user FOREIGN KEY (memberId) REFERENCES Member (id),
    CONSTRAINT fk_borrowings_copy FOREIGN KEY (copyId) REFERENCES Copy (id)
);

-- Insert values into Publisher table
INSERT INTO Publisher (name, address, phoneNumber)
VALUES ('Penguin Random House', '123 Publisher Lane, NY', '1234567890'),
       ('HarperCollins', '456 Harper St, NY', '2345678901'),
       ('Simon & Schuster', '789 Simon Blvd, NY', '3456789012'),
       ('Macmillan', '101 Macmillan Ave, NY', '4567890123'),
       ('Hachette', '202 Hachette Rd, NY', '5678901234');

-- Insert values into Member table
INSERT INTO Member (name, email, phoneNumber, address)
VALUES ('John Doe', 'john.doe@example.com', '1234567890', '123 Main St, NY'),
       ('Jane Smith', 'jane.smith@example.com', '2345678901', '456 Elm St, NY'),
       ('Alice Johnson', 'alice.johnson@example.com', '3456789012', '789 Oak St, NY'),
       ('Bob Brown', 'bob.brown@example.com', '4567890123', '101 Pine St, NY'),
       ('Charlie White', 'charlie.white@example.com', '5678901234', '202 Maple St, NY');

-- Insert values into Book table (after Publisher records)
INSERT INTO Book (title, author, publisherId, publicationYear, isbn)
VALUES ('Book One', 'Author A', 1, 2001, '978-1234567890'),
       ('Book Two', 'Author B', 2, 2002, '978-2345678901'),
       ('Book Three', 'Author C', 3, 2003, '978-3456789012'),
       ('Book Four', 'Author D', 4, 2004, '978-4567890123'),
       ('Book Five', 'Author E', 5, 2005, '978-5678901234');

-- Insert values into Copy table (after Book records)
INSERT INTO Copy (bookId, copyNumber, status)
VALUES (1, 11111, 'Available'),
       (2, 22222, 'Borrowed'),
       (3, 33333, 'Available'),
       (4, 44444, 'Available'),
       (5, 55555, 'Borrowed');

-- Insert values into Librarian table (after Member records)
INSERT INTO Librarian (memberId, employmentDate, position)
VALUES (1, DATE '2020-01-01', 'Manager'),
       (2, DATE '2021-02-01', 'Assistant'),
       (3, DATE '2019-03-01', 'Technician'),
       (4, DATE '2018-04-01', 'Clerk'),
       (5, DATE '2017-05-01', 'Cataloguer');

-- Insert values into Borrowing table (after Member and Copy records)
INSERT INTO Borrowing (memberId, copyId, borrowDate, returnDate)
VALUES (1, 2, DATE '2023-01-01', NULL),
       (2, 5, DATE '2023-02-01', NULL),
       (3, 4, DATE '2023-03-01', DATE '2023-04-01'),
       (4, 3, DATE '2023-05-01', NULL),
       (5, 1, DATE '2023-06-01', DATE '2023-07-01');

-- Commit the transaction
COMMIT;